components:
  parameters:
    SearchQueryMylistAllow:
      description: マイリスト追加済みかを取得する0/1 (デフォルト1)
      in: query
      name: with_mylisted
      required: false
      schema:
        default: 1
        enum:
        - 1
        - 0
        example: 1
        format: int32
        maximum: 1
        minimum: 0
        type: integer
    SearchQueryMylistDeny:
      description: マイリスト追加済みかを取得する0/1 (デフォルト0)
      in: query
      name: with_mylisted
      schema:
        default: 0
        enum:
        - 0
        - 1
        example: 0
        maximum: 1
        minimum: 0
        type: integer
    SearchQueryOrder:
      description: ソート方向 d:降順(大→小) a:昇順(小→大)
      in: query
      name: order
      required: false
      schema:
        default: d
        enum:
        - d
        - a
        example: d
        maxLength: 1
        minLength: 1
        type: string
    SearchQueryPage:
      description: 'ページ番号 (NOTE: 1ページ辺りの応答は20件)'
      in: query
      name: page
      required: false
      schema:
        minimum: 1
        type: integer
    SearchQueryPerPage:
      description: 1ページ辺りの要素数
      in: query
      name: per_page
      required: false
      schema:
        default: 20
        enum:
        - 20
        - 40
        - 60
        - 80
        - 100
        example: 20
        maximum: 100
        minimum: 20
        type: integer
    SearchQuerySort:
      description: ソート方法 l:いいね数順 d:投稿日順
      in: query
      name: sort
      required: false
      schema:
        default: d
        enum:
        - l
        - d
        example: d
        type: string
    SearchQuerySortCatalog:
      description: ソート方法 c:ヒット数 d:最終更新 l:いいね数 n:名前
      in: query
      name: sort
      schema:
        default: d
        enum:
        - c
        - d
        - l
        - n
        example: d
        type: string
  schemas:
    GetSearchGeneralResponse:
      description: なんらかの手段で検索した場合の汎用応答構造体
      properties:
        contents:
          items:
            $ref: '#/components/schemas/LightArtStruct'
          type: array
        pagination:
          $ref: '#/components/schemas/PaginationStruct'
      title: GetSearchGeneralResponse
      type: object
      x-examples:
        example:
          contents:
          - artID: 1
            artists:
            - artistID: 1
              name: 彩電
            caption: Ｃ８９の新刊表紙となっていますっ
            datetime: '2015-12-27T07:29:00Z'
            file:
              ipfsHash:
                orig: QmYQvXHGoiTdJuFLQWXQpMBz9V4254gNixLjPjMB2T4g5Y
                thumb: QmYQvXHGoiTdJuFLQWXQpMBz9V4254gNixLjPjMB2T4g5Y
            likes: 0
            mylisted: false
            mylists: 0
            nsfw: false
            originService: Pixiv
            originUrl: https://www.pixiv.net/artworks/54265978
            page: 1
            similarity: 0
            title: 魔法少女は深淵になにをみるか？
            uploader:
              accountID: 1
              name: お窓
            views: 0
          pagination:
            count: 1
            current: 1
            pages: 1
            perPage: 20
            title: 香風智乃
            type: art
    LightAccountStruct:
      description: アカウント情報の簡易構造体(読み取り専用)
      properties:
        accountID:
          description: アカウントID
          example: 1
          minimum: 1
          type: integer
        name:
          description: アカウント名
          example: お窓
          type: string
      title: LightAccountStruct
      type: object
      x-examples:
        example:
          accountID: 1
          name: お窓
    LightArtStruct:
      description: イラスト情報の簡易構造体(読み取り専用)(検索結果等で利用)
      properties:
        artID:
          description: イラストID
          example: 1
          minimum: 1
          type: integer
        artists:
          description: 絵師情報(複数可)
          items:
            $ref: '#/components/schemas/LightArtistStruct'
          type: array
        caption:
          description: '説明文

            NOTE: 通常出典記載の説明文と同じ物が入る'
          example: Ｃ８９の新刊表紙となっていますっ
          minLength: 1
          type: string
        datetime:
          description: 登録日(%Y-%m-%d %H:%M:%S)
          example: '2015-12-27T07:29:00Z'
          format: date-time
          type: string
        file:
          properties:
            ipfsHash:
              description: IPFSのハッシュ情報
              properties:
                orig:
                  description: Raw画像ハッシュ
                  example: QmYQvXHGoiTdJuFLQWXQpMBz9V4254gNixLjPjMB2T4g5Y
                  maxLength: 100
                  type: string
                thumb:
                  description: サムネイルハッシュ
                  example: QmYQvXHGoiTdJuFLQWXQpMBz9V4254gNixLjPjMB2T4g5Y
                  maxLength: 100
                  type: string
              type: object
          type: object
        likes:
          default: 0
          description: 累計いいね数
          example: 0
          format: int64
          minimum: 0
          type: integer
        mylisted:
          default: false
          description: リクエストしたユーザーがマイリストしているか
          type: boolean
        mylists:
          default: 0
          description: マイリスト済みのユーザー数
          example: 0
          format: int64
          minimum: 0
          type: integer
        nsfw:
          default: false
          description: アダルトコンテンツか否か
          type: boolean
        originService:
          description: 出典のサービス名
          example: Pixiv
          minLength: 1
          type: string
        originUrl:
          description: 出典URL
          example: https://www.pixiv.net/artworks/54265978
          format: uri-reference
          minLength: 1
          type: string
        page:
          default: 1
          description: グループになっている場合のページ番号
          example: 1
          format: int32
          minimum: 1
          type: integer
        similarity:
          description: 元画像との類似度(画像検索のみ)
          maximum: 1
          minimum: 0
          type: number
        title:
          description: イラスト(作品)名
          example: 魔法少女は深淵になにをみるか？
          minLength: 1
          type: string
        uploader:
          $ref: '#/components/schemas/LightAccountStruct'
        views:
          default: 0
          description: 累計閲覧数
          example: 0
          format: int64
          minimum: 0
          type: integer
      title: LightArtStruct
      type: object
      x-examples:
        example:
          artID: 1
          artists:
          - artistID: 1
            name: 彩電
          caption: Ｃ８９の新刊表紙となっていますっ
          datetime: '2015-12-27T07:29:00Z'
          file:
            ipfsHash:
              orig: QmYQvXHGoiTdJuFLQWXQpMBz9V4254gNixLjPjMB2T4g5Y
              thumb: QmYQvXHGoiTdJuFLQWXQpMBz9V4254gNixLjPjMB2T4g5Y
          likes: 0
          mylisted: false
          mylists: 0
          nsfw: false
          originService: Pixiv
          originUrl: https://www.pixiv.net/artworks/54265978
          page: 1
          similarity: 0
          title: 魔法少女は深淵になにをみるか？
          uploader:
            accountID: 1
            name: お窓
          views: 0
    LightArtistStruct:
      description: 絵師情報の簡易構造体(読み取り専用)
      properties:
        artistID:
          example: 1
          type: integer
        name:
          example: 彩電
          type: string
      title: LightArtistStruct
      type: object
      x-examples:
        example:
          artistID: 1
          name: 彩電
    PaginationStruct:
      description: ページネーション情報の構造体
      properties:
        count:
          default: 0
          description: ヒット総数
          example: 1
          minimum: 0
          type: integer
        current:
          default: 1
          description: 現在のページ
          example: 1
          minimum: 1
          type: integer
        pages:
          default: 1
          description: ページ数
          example: 1
          minimum: 1
          type: integer
        perPage:
          default: 20
          description: ページ毎の取得数
          enum:
          - 20
          - 40
          - 60
          - 80
          - 100
          example: 20
          format: int32
          maximum: 100
          minimum: 20
          type: integer
        title:
          description: ページネーションタイトル(表示用)
          example: 香風智乃
          minLength: 1
          type: string
        type:
          default: tag
          description: ページネーション種別(表示用)
          enum:
          - artist
          - tag
          - uploader
          - notify-client
          - notify-condition
          - mute
          - follow
          - article
          - mylist-list
          - art
          - upload-history
          example: tag
          type: string
      required:
      - title
      - type
      - count
      - current
      - pages
      - perPage
      title: PaginationStruct
      type: object
      x-examples:
        example:
          count: 1
          current: 1
          pages: 1
          perPage: 20
          title: 香風智乃
          type: tag
  securitySchemes:
    Authorization:
      scheme: bearer
      type: http
info:
  contact:
    email: dsgamer777@gmail.com
    name: Omado
    url: https://twitter.com/shallow_omado
  description: Ranking related api (optional)
  license:
    name: AGPLv3
    url: https://www.gnu.org/licenses/agpl-3.0.ja.html
  title: UsagiBooru Ranking API
  version: '2.0'
openapi: 3.0.0
paths:
  /ranking/monthly/likes:
    get:
      description: 月間いいね数ランキングを取得します
      operationId: getMonthlyLikesRanking
      parameters:
      - $ref: '#/components/parameters/SearchQueryPage'
      - $ref: '#/components/parameters/SearchQuerySort'
      - $ref: '#/components/parameters/SearchQueryMylistDeny'
      - $ref: '#/components/parameters/SearchQueryPerPage'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetSearchGeneralResponse'
          description: OK
      summary: Get monthly likes ranking
      tags:
      - ranking
  /ranking/monthly/views:
    get:
      description: 月間閲覧数ランキングを取得します
      operationId: getMonthlyViewsRanking
      parameters:
      - $ref: '#/components/parameters/SearchQueryPage'
      - $ref: '#/components/parameters/SearchQuerySort'
      - $ref: '#/components/parameters/SearchQueryMylistDeny'
      - $ref: '#/components/parameters/SearchQueryPerPage'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetSearchGeneralResponse'
          description: OK
      summary: Get monthly views ranking
      tags:
      - ranking
  /ranking/weekly/likes:
    get:
      description: 週間いいね数ランキングを取得します
      operationId: getWeeklyLikesRanking
      parameters:
      - $ref: '#/components/parameters/SearchQueryPage'
      - $ref: '#/components/parameters/SearchQuerySort'
      - $ref: '#/components/parameters/SearchQueryMylistDeny'
      - $ref: '#/components/parameters/SearchQueryPerPage'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetSearchGeneralResponse'
          description: OK
      summary: Get weekly likes ranking
      tags:
      - ranking
  /ranking/weekly/views:
    get:
      description: 週間閲覧数ランキングを取得します
      operationId: getWeeklyViewsRanking
      parameters:
      - $ref: '#/components/parameters/SearchQueryPage'
      - $ref: '#/components/parameters/SearchQuerySort'
      - $ref: '#/components/parameters/SearchQueryMylistDeny'
      - $ref: '#/components/parameters/SearchQueryPerPage'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetSearchGeneralResponse'
          description: OK
      summary: Get weekly views ranking
      tags:
      - ranking
  /ranking/yearly/likes:
    get:
      description: 年間いいね数ランキングを取得します
      operationId: getYearlyLikesRanking
      parameters:
      - $ref: '#/components/parameters/SearchQueryPage'
      - $ref: '#/components/parameters/SearchQuerySort'
      - $ref: '#/components/parameters/SearchQueryMylistDeny'
      - $ref: '#/components/parameters/SearchQueryPerPage'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetSearchGeneralResponse'
          description: OK
      summary: Get yearly likes ranking
      tags:
      - ranking
  /ranking/yearly/views:
    get:
      description: 年間閲覧数ランキングを取得します
      operationId: getYearlyViewsRanking
      parameters:
      - $ref: '#/components/parameters/SearchQueryPage'
      - $ref: '#/components/parameters/SearchQuerySort'
      - $ref: '#/components/parameters/SearchQueryMylistAllow'
      - $ref: '#/components/parameters/SearchQueryPerPage'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetSearchGeneralResponse'
          description: OK
      summary: Get yearly views ranking
      tags:
      - ranking
security:
- Authorization: []
servers:
- description: Prod
  url: https://api.gochiusa.team
- description: Staging
  url: https://api-next.gochiusa.team
- description: Dev
  url: http://127.0.0.1:8080
tags:
- name: ranking
