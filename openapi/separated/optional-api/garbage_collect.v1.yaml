components:
  parameters:
    SearchQueryMylistAllow:
      description: マイリスト追加済みかを取得する0/1 (デフォルト1)
      in: query
      name: with_mylisted
      required: false
      schema:
        default: 1
        enum:
        - 1
        - 0
        example: 1
        format: int32
        maximum: 1
        minimum: 0
        type: integer
    SearchQueryMylistDeny:
      description: マイリスト追加済みかを取得する0/1 (デフォルト0)
      in: query
      name: with_mylisted
      schema:
        default: 0
        enum:
        - 0
        - 1
        example: 0
        maximum: 1
        minimum: 0
        type: integer
    SearchQueryOrder:
      description: ソート方向 d:降順(大→小) a:昇順(小→大)
      in: query
      name: order
      required: false
      schema:
        default: d
        enum:
        - d
        - a
        example: d
        maxLength: 1
        minLength: 1
        type: string
    SearchQueryPage:
      description: 'ページ番号 (NOTE: 1ページ辺りの応答は20件)'
      in: query
      name: page
      required: false
      schema:
        minimum: 1
        type: integer
    SearchQueryPerPage:
      description: 1ページ辺りの要素数
      in: query
      name: per_page
      required: false
      schema:
        default: 20
        enum:
        - 20
        - 40
        - 60
        - 80
        - 100
        example: 20
        maximum: 100
        minimum: 20
        type: integer
    SearchQuerySort:
      description: ソート方法 l:いいね数順 d:投稿日順
      in: query
      name: sort
      required: false
      schema:
        default: d
        enum:
        - l
        - d
        example: d
        type: string
    SearchQuerySortCatalog:
      description: ソート方法 c:ヒット数 d:最終更新 l:いいね数 n:名前
      in: query
      name: sort
      schema:
        default: d
        enum:
        - c
        - d
        - l
        - n
        example: d
        type: string
  schemas:
    GeneralMessageResponse:
      description: 共通の応答構造体(404/401/400等を返す際に使用)
      properties:
        message:
          description: 応答メッセージ(何が間違っているかの詳細)
          minLength: 1
          type: string
      required:
      - message
      title: GeneralMessageResponse
      type: object
      x-examples:
        bad-request:
          message: Your request body is wrong.
        locked:
          message: Specified content is referenced from other content.
        no-permission:
          message: You don't have enough permission to do it.
        not-found:
          message: Specified content was not found.
  securitySchemes:
    Authorization:
      scheme: bearer
      type: http
info:
  contact:
    email: dsgamer777@gmail.com
    name: Omado
    url: https://twitter.com/shallow_omado
  description: Garbage_collect related api (optional)
  license:
    name: AGPLv3
    url: https://www.gnu.org/licenses/agpl-3.0.ja.html
  title: UsagiBooru Garbage_collect API
  version: '2.0'
openapi: 3.0.0
paths:
  /garbage_collect:
    post:
      description: '参照されていない 絵師情報/タグ情報を削除します

        (cron等でやってもいいかもしれないですが 現在は手動)'
      operationId: garbageCollect
      responses:
        '204':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GeneralMessageResponse'
          description: No Content
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GeneralMessageResponse'
          description: Forbidden
      summary: Garbage collect
      tags:
      - garbage_collect
security:
- Authorization: []
servers:
- description: Prod
  url: https://api.gochiusa.team
- description: Staging
  url: https://api-next.gochiusa.team
- description: Dev
  url: http://127.0.0.1:8080
tags:
- name: garbage_collect
