components:
  parameters:
    SearchQueryMylistAllow:
      description: マイリスト追加済みかを取得する0/1 (デフォルト1)
      in: query
      name: with_mylisted
      required: false
      schema:
        default: 1
        enum:
        - 1
        - 0
        example: 1
        format: int32
        maximum: 1
        minimum: 0
        type: integer
    SearchQueryMylistDeny:
      description: マイリスト追加済みかを取得する0/1 (デフォルト0)
      in: query
      name: with_mylisted
      schema:
        default: 0
        enum:
        - 0
        - 1
        example: 0
        maximum: 1
        minimum: 0
        type: integer
    SearchQueryOrder:
      description: ソート方向 d:降順(大→小) a:昇順(小→大)
      in: query
      name: order
      required: false
      schema:
        default: d
        enum:
        - d
        - a
        example: d
        maxLength: 1
        minLength: 1
        type: string
    SearchQueryPage:
      description: 'ページ番号 (NOTE: 1ページ辺りの応答は20件)'
      in: query
      name: page
      required: false
      schema:
        minimum: 1
        type: integer
    SearchQueryPerPage:
      description: 1ページ辺りの要素数
      in: query
      name: per_page
      required: false
      schema:
        default: 20
        enum:
        - 20
        - 40
        - 60
        - 80
        - 100
        example: 20
        maximum: 100
        minimum: 20
        type: integer
    SearchQuerySort:
      description: ソート方法 l:いいね数順 d:投稿日順
      in: query
      name: sort
      required: false
      schema:
        default: d
        enum:
        - l
        - d
        example: d
        type: string
    SearchQuerySortCatalog:
      description: ソート方法 c:ヒット数 d:最終更新 l:いいね数 n:名前
      in: query
      name: sort
      schema:
        default: d
        enum:
        - c
        - d
        - l
        - n
        example: d
        type: string
  schemas:
    GeneralMessageResponse:
      description: 共通の応答構造体(404/401/400等を返す際に使用)
      properties:
        message:
          description: 応答メッセージ(何が間違っているかの詳細)
          minLength: 1
          type: string
      required:
      - message
      title: GeneralMessageResponse
      type: object
      x-examples:
        bad-request:
          message: Your request body is wrong.
        locked:
          message: Specified content is referenced from other content.
        no-permission:
          message: You don't have enough permission to do it.
        not-found:
          message: Specified content was not found.
    GetMachineLearningGeneralResponse:
      description: 機械学習の処理結果が返されるエンドポイントの汎用応答構造体
      properties:
        url:
          example: https://api.example.com/ml/result/12345.png
          format: uri-reference
          maxLength: 100
          minLength: 1
          type: string
      required:
      - url
      title: GetMachineLearningGeneralResponse
      type: object
      x-examples:
        example:
          url: https://api.example.com/ml/result/12345.png
    GetPollingFinishResponse:
      description: 機械学習の処理が完了した場合に返される応答構造体
      properties:
        id:
          example: '1'
          maxLength: 100
          minLength: 1
          type: string
        url:
          example: https://api.example.com/ml/predict/tags/result/1
          format: uri-reference
          maxLength: 100
          minLength: 1
          type: string
      required:
      - url
      - id
      title: GetPollingFinishResponse
      type: object
      x-examples:
        example:
          id: '1'
          url: https://api.example.com/ml/predict/tags/result/1
    PostMachineLearningGeneralRequest:
      description: 機械学習の処理を行うエンドポイントの汎用要求構造体
      properties:
        image:
          description: Binary型の画像
          format: binary
          type: string
      required:
      - image
      title: PostMachineLearningGeneralRequest
      type: object
      x-examples: {}
    PostMachineLearningGeneralResponse:
      description: 機械学習の処理を行うエンドポイントの汎用応答構造体
      properties:
        url:
          description: Polling用URLを返す(すぐに終わらん)
          format: iri-reference
          type: string
      required:
      - url
      title: PostMachineLearningGeneralResponse
      type: object
      x-examples:
        example:
          url: https://api.example.com/ml/polling/1
    PostPredictNsfwResponse:
      description: 画像がNSFWか検証した結果の応答構造体
      properties:
        accuracy:
          example: 0.8889
          maximum: 1
          minimum: 0
          type: number
        nsfw:
          default: false
          type: boolean
      required:
      - nsfw
      - accuracy
      title: PostPredictNsfwResponse
      type: object
      x-examples:
        example:
          accuracy: 0.8889
          nsfw: false
    PostPredictTagsResponse:
      description: 画像からタグを推定した結果の応答構造体
      properties:
        tags:
          items:
            properties:
              accuracy:
                description: 推定の確実度
                example: 0.8889
                maximum: 1
                minimum: 0
                type: number
              name:
                description: タグ名
                example: kafuu_chino
                maxLength: 100
                minLength: 1
                type: string
            required:
            - name
            - accuracy
            type: object
          maxItems: 100
          minItems: 0
          type: array
      required:
      - tags
      title: PostPredictTagsResponse
      type: object
      x-examples:
        example-1:
          tags:
          - accuracy: 0.8889
            name: kafuu_chino
  securitySchemes:
    Authorization:
      scheme: bearer
      type: http
info:
  contact:
    email: dsgamer777@gmail.com
    name: Omado
    url: https://twitter.com/shallow_omado
  description: Ml related api (optional)
  license:
    name: AGPLv3
    url: https://www.gnu.org/licenses/agpl-3.0.ja.html
  title: UsagiBooru Ml API
  version: '2.0'
openapi: 3.0.0
paths:
  /ml/polling/{pollingID}:
    get:
      description: '処理結果が返ってくるまでここをPollingします

        1req/10s ぐらいのリクエストでお願いします'
      operationId: getPolling
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetPollingFinishResponse'
          description: OK
        '304':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GeneralMessageResponse'
          description: Not Modified
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GeneralMessageResponse'
          description: Not Found
      summary: Get ml polling
      tags:
      - ml
    parameters:
    - description: 対象のポーリングID
      in: path
      name: pollingID
      required: true
      schema:
        type: integer
  /ml/predict/nsfw:
    parameters: []
    post:
      description: '指定された画像がR18かNudeNet/TensorflowLiteを使い推測します

        (管理者のみ使用可)'
      operationId: predictNsfw
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PostMachineLearningGeneralRequest'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PostMachineLearningGeneralResponse'
          description: OK
        '429':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GeneralMessageResponse'
          description: Too Many Requests
        '503':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GeneralMessageResponse'
          description: Service Unavailable
      summary: Predict image nsfw
      tags:
      - ml
  /ml/predict/nsfw/result/{resultID}:
    get:
      description: 'NSFW推定の処理結果を返します

        結果データは1日で削除されます'
      operationId: getNsfwPredictResult
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PostPredictNsfwResponse'
          description: OK
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GeneralMessageResponse'
          description: Not Found
      summary: Get nsfw predict result
      tags:
      - ml
    parameters:
    - description: 対象の結果ID
      in: path
      name: resultID
      required: true
      schema:
        type: integer
  /ml/predict/tags:
    post:
      description: '指定された画像のタグをDeepDanbooruで推測します

        (管理者のみ使用可)'
      operationId: predictTags
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PostMachineLearningGeneralRequest'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PostMachineLearningGeneralResponse'
          description: OK
        '429':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GeneralMessageResponse'
          description: Too Many Requests
        '503':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GeneralMessageResponse'
          description: Service Unavailable
      summary: Predict image tags
      tags:
      - ml
  /ml/predict/tags/result/{resultID}:
    get:
      description: 'タグ推定の処理結果を返します

        結果データは1日で削除されます'
      operationId: getTagPredictResult
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PostPredictTagsResponse'
          description: OK
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GeneralMessageResponse'
          description: Not Found
      summary: Get tags predict result
      tags:
      - ml
    parameters:
    - description: 対象の結果ID
      in: path
      name: resultID
      required: true
      schema:
        type: integer
  /ml/transparent:
    post:
      description: '指定された画像の背景をrembgまたはhttps://github.com/zymk9/Yet-Another-Anime-Segmenterを使い透過します

        (管理者のみ使用可)'
      operationId: transparentImage
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PostMachineLearningGeneralRequest'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PostMachineLearningGeneralResponse'
          description: OK
        '429':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GeneralMessageResponse'
          description: Too Many Requests
        '503':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GeneralMessageResponse'
          description: Service Unavailable
      summary: Transparent image
      tags:
      - ml
  /ml/transparent/result/{resultID}:
    get:
      description: '透過の処理結果を返します

        結果画像は1日で削除されます'
      operationId: getTransparentImageResult
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetMachineLearningGeneralResponse'
          description: OK
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GeneralMessageResponse'
          description: Not Found
      summary: Get transparent result
      tags:
      - ml
    parameters:
    - description: 対象の結果ID
      in: path
      name: resultID
      required: true
      schema:
        type: integer
  /ml/waifu2x:
    post:
      description: '指定された画像をwaifu2x-converter-cpp等で拡大します

        (管理者のみ使用可)'
      operationId: scaleWaifu2x
      parameters:
      - description: 拡大レベル
        in: query
        name: scale
        required: true
        schema:
          default: 2
          maximum: 3
          minimum: 1
          type: number
      - description: ノイズ除去レベル
        in: query
        name: denoise
        required: true
        schema:
          default: 1
          enum:
          - 0
          - 1
          - 2
          - 3
          example: 1
          maximum: 3
          minimum: 0
          type: integer
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PostMachineLearningGeneralRequest'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PostMachineLearningGeneralResponse'
          description: OK
        '429':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GeneralMessageResponse'
          description: Too Many Requests
        '503':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GeneralMessageResponse'
          description: Service Unavailable
      summary: Waifu2x image
      tags:
      - ml
  /ml/waifu2x/result/{resultID}:
    get:
      description: 'Waifu2xの処理結果を返します

        結果画像は1日で削除されます'
      operationId: getScaleWaifu2xResult
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetMachineLearningGeneralResponse'
          description: OK
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GeneralMessageResponse'
          description: Not Found
      summary: Get waifu2x result
      tags:
      - ml
    parameters:
    - description: 対象の結果ID
      in: path
      name: resultID
      required: true
      schema:
        type: integer
security:
- Authorization: []
servers:
- description: Prod
  url: https://api.gochiusa.team
- description: Staging
  url: https://api-next.gochiusa.team
- description: Dev
  url: http://127.0.0.1:8080
tags:
- name: ml
