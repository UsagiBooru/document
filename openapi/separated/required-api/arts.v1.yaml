components:
  parameters:
    SearchQueryMylistAllow:
      description: マイリスト追加済みかを取得する0/1 (デフォルト1)
      in: query
      name: with_mylisted
      required: false
      schema:
        default: 1
        enum:
        - 1
        - 0
        example: 1
        format: int32
        maximum: 1
        minimum: 0
        type: integer
    SearchQueryMylistDeny:
      description: マイリスト追加済みかを取得する0/1 (デフォルト0)
      in: query
      name: with_mylisted
      schema:
        default: 0
        enum:
        - 0
        - 1
        example: 0
        maximum: 1
        minimum: 0
        type: integer
    SearchQueryOrder:
      description: ソート方向 d:降順(大→小) a:昇順(小→大)
      in: query
      name: order
      required: false
      schema:
        default: d
        enum:
        - d
        - a
        example: d
        maxLength: 1
        minLength: 1
        type: string
    SearchQueryPage:
      description: 'ページ番号 (NOTE: 1ページ辺りの応答は20件)'
      in: query
      name: page
      required: false
      schema:
        minimum: 1
        type: integer
    SearchQueryPerPage:
      description: 1ページ辺りの要素数
      in: query
      name: per_page
      required: false
      schema:
        default: 20
        enum:
        - 20
        - 40
        - 60
        - 80
        - 100
        example: 20
        maximum: 100
        minimum: 20
        type: integer
    SearchQuerySort:
      description: ソート方法 l:いいね数順 d:投稿日順
      in: query
      name: sort
      required: false
      schema:
        default: d
        enum:
        - l
        - d
        example: d
        type: string
    SearchQuerySortCatalog:
      description: ソート方法 c:ヒット数 d:最終更新 l:いいね数 n:名前
      in: query
      name: sort
      schema:
        default: d
        enum:
        - c
        - d
        - l
        - n
        example: d
        type: string
  schemas:
    ArtDetailedLikesStruct:
      description: イラストのいいね詳細情報構造体
      properties:
        blue:
          default: 0
          example: 0
          minimum: 0
          type: integer
        green:
          default: 0
          example: 0
          minimum: 0
          type: integer
        red:
          default: 0
          example: 0
          minimum: 0
          type: integer
        yellow:
          default: 0
          example: 0
          minimum: 0
          type: integer
      required:
      - yellow
      - green
      - red
      - blue
      title: ArtDetailedLikesStruct
      type: object
      x-examples:
        example:
          blue: 0
          green: 0
          red: 0
          yellow: 0
    ArtStruct:
      description: イラストの作成/編集に使う構造体
      properties:
        approvers:
          description: 承認者情報(複数可)
          items:
            $ref: '#/components/schemas/LightAccountStruct'
          type: array
        artID:
          description: イラストID
          example: 1
          minimum: 1
          type: integer
        artists:
          description: 絵師情報(複数可)
          items:
            $ref: '#/components/schemas/LightArtistStruct'
          type: array
        caption:
          description: '説明文 NOTE: 通常出典に記載されていた内容そのままが入る'
          example: Ｃ８９の新刊表紙となっていますっ
          minLength: 1
          type: string
        contributors:
          description: 投稿者情報(複数可)
          items:
            $ref: '#/components/schemas/LightAccountStruct'
          type: array
        datetime:
          description: 登録日時(%Y-%m-%dY%H:%M:%SZ)
          example: '2015-12-27T07:29:00Z'
          format: date-time
          type: string
        detailedLikes:
          $ref: '#/components/schemas/ArtDetailedLikesStruct'
        file:
          properties:
            ipfsHash:
              properties:
                info:
                  description: このイラスト情報のJSONデータハッシュ
                  example: QmYQvXHGoiTdJuFLQWXQpMBz9V4254gNixLjPjMB2T4g5Y
                  maxLength: 100
                  type: string
                large:
                  description: このイラストのLarge画像
                  example: QmYQvXHGoiTdJuFLQWXQpMBz9V4254gNixLjPjMB2T4g5Y
                  maxLength: 100
                  type: string
                orig:
                  description: このイラストのRAW画像
                  example: QmYQvXHGoiTdJuFLQWXQpMBz9V4254gNixLjPjMB2T4g5Y
                  maxLength: 100
                  type: string
                small:
                  description: このイラストのSmall画像
                  example: QmYQvXHGoiTdJuFLQWXQpMBz9V4254gNixLjPjMB2T4g5Y
                  maxLength: 100
                  type: string
                thumb:
                  description: このイラストのサムネイル画像
                  example: QmYQvXHGoiTdJuFLQWXQpMBz9V4254gNixLjPjMB2T4g5Y
                  maxLength: 100
                  type: string
              type: object
            original:
              properties:
                extension:
                  default: png
                  description: 拡張子(通常、jpgもしくはpng)
                  enum:
                  - jpg
                  - jpeg
                  - png
                  - webp
                  - gif
                  example: png
                  maxLength: 10
                  minLength: 1
                  type: string
                height:
                  description: RAW画像の縦方向のピクセル数
                  example: 1569
                  format: int32
                  maximum: 100000
                  minimum: 1
                  type: integer
                pHash:
                  description: 画像ハッシュ
                  example: e5d2de31c62dd320
                  maxLength: 64
                  minLength: 1
                  type: string
                sha256:
                  description: ファイルハッシュ
                  example: 0d68d378bec11f768f43925db81dd416c000de0d9ee2a8a1c2ec02aecb312e62
                  maxLength: 64
                  minLength: 64
                  type: string
                size:
                  default: 0
                  description: ファイルサイズをbytesで入力
                  example: 1385794
                  format: int32
                  maximum: 1099511627776
                  minimum: 1
                  type: integer
                width:
                  description: RAW画像の横方向のピクセル数
                  example: 1200
                  format: int32
                  maximum: 100000
                  minimum: 1
                  type: integer
              type: object
          type: object
        likes:
          default: 0
          description: 累計いいね数
          example: 0
          format: int64
          minimum: 0
          type: integer
        mylisted:
          default: false
          description: マイリスト登録済みか否か
          type: boolean
        mylists:
          default: 0
          description: 累計マイリスト数
          example: 0
          format: int64
          minimum: 0
          type: integer
        nsfw:
          default: false
          description: アダルトコンテンツかどうか
          type: boolean
        originDatetime:
          description: 出典投稿日時(%Y-%m-%dY%H:%M:%SZ)
          example: '2015-12-27T07:29:00Z'
          format: date-time
          type: string
        originService:
          description: 出典サービス名
          example: Pixiv
          minLength: 1
          type: string
        originUrl:
          description: 出典URL
          example: https://www.pixiv.net/artworks/54265978
          format: uri-reference
          minLength: 1
          type: string
        page:
          default: 1
          description: グループになっている場合のページ番号
          example: 1
          format: int32
          minimum: 1
          type: integer
        replaces:
          description: 置き換え履歴データ
          items:
            $ref: '#/components/schemas/ReplaceStruct'
          type: array
        status:
          default: hidden
          description: 公開/非公開等の表示状態
          enum:
          - public
          - hidden
          - deleted-admin
          - deleted-legal
          - deleted-uploader
          example: public
          type: string
        tags:
          description: タグ情報
          properties:
            characters:
              description: キャラクタータグ
              items:
                $ref: '#/components/schemas/TagStruct'
              type: array
            copyrights:
              description: 出典タグ
              items:
                $ref: '#/components/schemas/TagStruct'
              type: array
            generals:
              description: 一般タグ
              items:
                $ref: '#/components/schemas/TagStruct'
              type: array
            metas:
              description: システムタグ
              items:
                $ref: '#/components/schemas/TagStruct'
              type: array
          type: object
        title:
          description: 'イラスト(作品)名 NOTE: 連番の場合は (2) (3)のような番号が入る'
          example: 魔法少女は深淵になにをみるか？
          minLength: 1
          type: string
        uploader:
          $ref: '#/components/schemas/LightAccountStruct'
        views:
          default: 0
          description: 累計閲覧数
          example: 0
          format: int64
          minimum: 0
          type: integer
      title: ArtStruct
      type: object
      x-examples:
        example:
          approvers:
          - accountID: 1
            name: お窓
          artID: 1
          artists:
          - artistID: 1
            name: 彩電
          caption: Ｃ８９の新刊表紙となっていますっ
          contributors:
          - accountID: 1
            name: お窓
          datetime: '2015-12-27T07:29:00Z'
          detailedLikes:
            blue: 0
            green: 0
            red: 0
            yellow: 0
          file:
            ipfsHash:
              info: QmYQvXHGoiTdJuFLQWXQpMBz9V4254gNixLjPjMB2T4g5Y
              large: QmYQvXHGoiTdJuFLQWXQpMBz9V4254gNixLjPjMB2T4g5Y
              orig: QmYQvXHGoiTdJuFLQWXQpMBz9V4254gNixLjPjMB2T4g5Y
              small: QmYQvXHGoiTdJuFLQWXQpMBz9V4254gNixLjPjMB2T4g5Y
              thumb: QmYQvXHGoiTdJuFLQWXQpMBz9V4254gNixLjPjMB2T4g5Y
            original:
              extension: png
              height: 1569
              pHash: e5d2de31c62dd320
              sha256: 0d68d378bec11f768f43925db81dd416c000de0d9ee2a8a1c2ec02aecb312e62
              size: 1385794
              width: 1200
          likes: 0
          mylisted: false
          mylists: 0
          nsfw: false
          originDatetime: '2015-12-27T07:29:00Z'
          originService: Pixiv
          originUrl: https://www.pixiv.net/artworks/54265978
          page: 1
          replaces: []
          status: public
          tags:
            characters:
            - name: 香風智乃
              nsfw: false
              tagID: 2
            copyrights:
            - name: ご注文はうさぎですか?
              nsfw: false
              tagID: 1
            generals:
            - name: ロリ
              nsfw: false
              tagID: 3
            metas:
            - name: FHD
              nsfw: false
              tagID: 4
          title: 魔法少女は深淵になにをみるか？
          uploader:
            accountID: 1
            name: お窓
          views: 0
    CommentEditStruct:
      description: コメントの編集に使う構造体
      properties:
        body:
          description: メッセージ本文(これ以外は編集できない)
          type: string
      required:
      - body
      title: CommentEditStruct
      type: object
      x-examples:
        example:
          body: Hello world!
    CommentStruct:
      description: コメント情報構造体(読み取り専用)
      properties:
        author:
          $ref: '#/components/schemas/LightAccountStruct'
        body:
          description: コメント本文
          example: Hello world!
          maxLength: 500
          minLength: 1
          type: string
        commentID:
          description: '"作品別" コメントID'
          format: int32
          minimum: 1
          type: integer
        created:
          description: 投稿時刻(datetime)
          example: '2021-03-13T11:29:24Z'
          format: date-time
          type: string
        updated:
          description: 更新時刻(datetime)
          example: '2021-03-13T11:29:24Z'
          format: date-time
          type: string
      title: CommentStruct
      type: object
      x-examples:
        example:
          author:
            accountID: 1
            name: お窓
          body: Hello world!
          commentID: 1
          created: '2021-03-13T11:29:24Z'
          updated: '2021-03-13T11:29:24Z'
    GeneralMessageResponse:
      description: 共通の応答構造体(404/401/400等を返す際に使用)
      properties:
        message:
          description: 応答メッセージ(何が間違っているかの詳細)
          minLength: 1
          type: string
      required:
      - message
      title: GeneralMessageResponse
      type: object
      x-examples:
        bad-request:
          message: Your request body is wrong.
        locked:
          message: Specified content is referenced from other content.
        no-permission:
          message: You don't have enough permission to do it.
        not-found:
          message: Specified content was not found.
    GetArtCommentsResponse:
      description: イラストに対するコメント一覧の応答構造体
      properties:
        comments:
          items:
            $ref: '#/components/schemas/CommentStruct'
          type: array
      title: GetArtCommentsResponse
      type: object
      x-examples:
        success:
          comments:
          - author:
              accountID: 1
              name: お窓
            body: Hello world!
            commentID: 1
            created: '2021-03-13T11:29:24Z'
            updated: '2021-03-13T11:29:24Z'
        success-no-data:
          comments: []
    GetArtLikesResponse:
      description: イラストに対するいいね数の応答構造体
      properties:
        likes:
          default: 0
          description: 累計いいね数
          example: 0
          minimum: 0
          type: integer
      title: GetArtLikesResponse
      type: object
      x-examples:
        example:
          likes: 0
    GetArtTagsResponse:
      description: イラストに設定されているタグ一覧の応答構造体
      properties:
        tags:
          description: タグ情報
          properties:
            characters:
              description: キャラクタータグ
              items:
                $ref: '#/components/schemas/TagStruct'
              type: array
            copyrights:
              description: 出典タグ
              items:
                $ref: '#/components/schemas/TagStruct'
              type: array
            generals:
              description: 一般タグ
              items:
                $ref: '#/components/schemas/TagStruct'
              type: array
            metas:
              description: システムタグ
              items:
                $ref: '#/components/schemas/TagStruct'
              type: array
          type: object
      title: GetArtTagsResponse
      type: object
      x-examples:
        example:
          tags:
            characters:
            - name: 香風智乃
              nsfw: false
              tagID: 2
            copyrights:
            - name: ご注文はうさぎですか?
              nsfw: false
              tagID: 1
            generals:
            - name: ロリ
              nsfw: false
              tagID: 3
            metas:
            - name: FHD
              nsfw: false
              tagID: 4
    GetArtViewsResponse:
      description: イラストの累計閲覧数の応答構造体
      properties:
        views:
          default: 0
          description: 累計閲覧数
          example: 0
          minimum: 0
          type: integer
      title: GetArtViewsResponse
      type: object
      x-examples:
        example:
          views: 0
    LightAccountStruct:
      description: アカウント情報の簡易構造体(読み取り専用)
      properties:
        accountID:
          description: アカウントID
          example: 1
          minimum: 1
          type: integer
        name:
          description: アカウント名
          example: お窓
          type: string
      title: LightAccountStruct
      type: object
      x-examples:
        example:
          accountID: 1
          name: お窓
    LightArtistStruct:
      description: 絵師情報の簡易構造体(読み取り専用)
      properties:
        artistID:
          example: 1
          type: integer
        name:
          example: 彩電
          type: string
      title: LightArtistStruct
      type: object
      x-examples:
        example:
          artistID: 1
          name: 彩電
    LightTagStruct:
      description: タグ情報の簡易構造体(読み取り専用)
      properties:
        name:
          description: タグの名称
          example: 香風智乃
          maxLength: 20
          minLength: 1
          type: string
        tagID:
          description: サイト内通しタグ番号
          example: 2
          minimum: 1
          type: integer
      title: LightTagStruct
      type: object
      x-examples:
        example-character:
          name: 香風智乃
          tagID: 2
          type: character
        example-copyright:
          name: ご注文はうさぎですか?
          tagID: 1
          type: copyright
        example-general:
          name: ロリ
          tagID: 3
          type: general
        example-meta:
          name: FHD
          tagID: 4
          type: meta
    PostReplaceArtRequest:
      description: イラストを置き換える場合の要求構造体
      properties:
        artID:
          description: より画質が高いイラストのID
          example: 2
          minimum: 1
          type: integer
      required:
      - artID
      title: PostReplaceArtRequest
      type: object
      x-examples:
        example:
          artID: 2
    PostReplaceArtSimulateResponse:
      description: イラストの置き換えを検証した場合の応答構造体
      properties:
        from:
          $ref: '#/components/schemas/ArtStruct'
        to:
          $ref: '#/components/schemas/ArtStruct'
      required:
      - to
      - from
      title: PostReplaceArtSimulateResponse
      type: object
      x-examples:
        example:
          from:
            approvers:
            - accountID: 1
              name: お窓
            artID: 1
            artists:
            - artistID: 1
              name: 彩電
            caption: Ｃ８９の新刊表紙となっていますっ
            contributors:
            - accountID: 1
              name: お窓
            datetime: '2015-12-27T07:29:00Z'
            detailedLikes:
              blue: 0
              green: 0
              red: 0
              yellow: 0
            file:
              ipfsHash:
                info: QmYQvXHGoiTdJuFLQWXQpMBz9V4254gNixLjPjMB2T4g5Y
                large: QmYQvXHGoiTdJuFLQWXQpMBz9V4254gNixLjPjMB2T4g5Y
                orig: QmYQvXHGoiTdJuFLQWXQpMBz9V4254gNixLjPjMB2T4g5Y
                small: QmYQvXHGoiTdJuFLQWXQpMBz9V4254gNixLjPjMB2T4g5Y
                thumb: QmYQvXHGoiTdJuFLQWXQpMBz9V4254gNixLjPjMB2T4g5Y
              original:
                extension: png
                height: 1569
                pHash: e5d2de31c62dd320
                sha256: 0d68d378bec11f768f43925db81dd416c000de0d9ee2a8a1c2ec02aecb312e62
                size: 1385794
                width: 1200
            likes: 0
            mylisted: false
            mylists: 0
            nsfw: false
            originService: Pixiv
            originUrl: https://www.pixiv.net/artworks/54265978
            page: 1
            replaces: []
            status: public
            tags:
              characters:
              - name: 香風智乃
                nsfw: false
                tagID: 2
              copyrights:
              - name: ご注文はうさぎですか?
                nsfw: false
                tagID: 1
              generals:
              - name: ロリ
                nsfw: false
                tagID: 3
              metas:
              - name: FHD
                nsfw: false
                tagID: 4
            title: 魔法少女は深淵になにをみるか？
            uploader:
              accountID: 1
              name: お窓
            views: 0
          to:
            approvers:
            - accountID: 1
              name: お窓
            artID: 1
            artists:
            - artistID: 1
              name: 彩電
            caption: Ｃ８９の新刊表紙となっていますっ
            contributors:
            - accountID: 1
              name: お窓
            datetime: '2015-12-27T07:29:00Z'
            detailedLikes:
              blue: 0
              green: 0
              red: 0
              yellow: 1204
            file:
              ipfsHash:
                info: QmYQvXHGoiTdJuFLQWXQpMBz9V4254gNixLjPjMB2T4g5Y
                large: QmYQvXHGoiTdJuFLQWXQpMBz9V4254gNixLjPjMB2T4g5Y
                orig: QmYQvXHGoiTdJuFLQWXQpMBz9V4254gNixLjPjMB2T4g5Y
                small: QmYQvXHGoiTdJuFLQWXQpMBz9V4254gNixLjPjMB2T4g5Y
                thumb: QmYQvXHGoiTdJuFLQWXQpMBz9V4254gNixLjPjMB2T4g5Y
              original:
                extension: png
                height: 1569
                pHash: e5d2de31c62dd320
                sha256: 0d68d378bec11f768f43925db81dd416c000de0d9ee2a8a1c2ec02aecb312e62
                size: 1385794
                width: 1200
            likes: 1204
            mylisted: false
            mylists: 0
            nsfw: false
            originService: Pixiv
            originUrl: https://www.pixiv.net/artworks/54265978
            page: 1
            replaces:
            - artID: 2
              caption: ''
              date: '2021-03-05 01:27:22'
              filesize: 2M
              height: 1200
              originService: Pixiv
              originUrl: https://www.pixiv.net/artworks/88062684
              title: チノちゃん
              width: 750
            status: public
            tags:
              characters:
              - name: 香風智乃
                nsfw: false
                tagID: 2
              copyrights:
              - name: ご注文はうさぎですか?
                nsfw: false
                tagID: 1
              generals:
              - name: ロリ
                nsfw: false
                tagID: 3
              metas:
              - name: FHD
                nsfw: false
                tagID: 4
            title: 魔法少女は深淵になにをみるか？
            uploader:
              accountID: 1
              name: お窓
            views: 0
    PostReportGeneralRequest:
      description: 通報を行う場合の汎用要求構造体
      properties:
        msg:
          description: 通報本文
          minLength: 1
          type: string
        type:
          default: bad-name
          description: 通報種別 1:不適切名称 2:不適切年齢 3:規約違反 4:法律違反
          enum:
          - bad-name
          - wrong-info
          - violation-rules
          - dmca
          example: bad-name
          type: string
      required:
      - type
      - msg
      title: ReportGeneralRequest
      type: object
      x-examples:
        example-1:
          msg: XSSしようとしてる人が居るみたいです、なんとかしてください
          type: bad-name
        example-2:
          msg: どうみてもエッチですあーいけません!
          type: wrong-info
        example-3:
          msg: 完全に同一の画像を上げ続け、運営を妨害している人が居ます
          type: violation-rules
        example-4:
          msg: DMCA Request
          type: dmca
    PutArtTagsRequest:
      description: イラストのタグ一覧をIDを用いて上書きする場合の要求構造体
      properties:
        tagID:
          description: 追加したいタグ一覧
          items:
            type: integer
          minItems: 1
          type: array
      required:
      - tagID
      title: PutArtTagsRequest
      type: object
      x-examples:
        example-1:
          tagID:
          - 1
          - 2
          - 3
    ReplaceStruct:
      description: イラストを置き換えた情報構造体(簡易イラスト構造体)
      properties:
        artID:
          description: サイト内イラスト通し番号
          type: integer
        caption:
          description: 作品の説明文
          minLength: 1
          type: string
        date:
          description: 投稿日付
          type: string
        filesize:
          description: ファイルサイズに単位を付けた人間が読めるもの
          minLength: 1
          type: string
        height:
          description: RAW画像の縦幅
          type: integer
        originService:
          description: 出典サービス名
          minLength: 1
          type: string
        originUrl:
          description: 出典URL
          minLength: 1
          type: string
        title:
          description: 作品名
          minLength: 1
          type: string
        width:
          description: RAW画像の横幅
          type: integer
      required:
      - artID
      - title
      - caption
      - date
      - originService
      - originUrl
      - width
      - height
      - filesize
      title: ReplaceStruct
      type: object
      x-examples:
        example:
          artID: 1
          caption: ''
          date: '2021-03-05 01:27:22'
          filesize: 2M
          height: 1200
          originService: Pixiv
          originUrl: https://www.pixiv.net/artworks/88062684
          title: チノちゃん
          width: 750
    TagStruct:
      description: タグ情報の構造体
      properties:
        child:
          description: 子となるタグ
          items:
            $ref: '#/components/schemas/LightTagStruct'
          minItems: 0
          type: array
        count:
          default: 0
          description: タグに属する作品数
          example: 0
          minimum: 0
          type: integer
        description:
          description: タグの説明文
          maxLength: 280
          minLength: 0
          type: string
        issuer:
          $ref: '#/components/schemas/LightAccountStruct'
        lcount:
          default: 0
          description: タグに属するいいね数
          example: 0
          minimum: 0
          type: integer
        name:
          description: タグの名称
          maxLength: 20
          minLength: 1
          type: string
        nsfw:
          default: false
          description: アダルトコンテンツが含まれるタグか
          type: boolean
        parent:
          description: 親となるタグ
          items:
            $ref: '#/components/schemas/LightTagStruct'
          minItems: 0
          type: array
        tagID:
          description: サイト内通しタグ番号
          minimum: 1
          type: integer
        type:
          default: general
          description: タグ種別
          enum:
          - copyright
          - character
          - general
          - meta
          example: general
          type: string
      title: TagStruct
      type: object
      x-examples:
        example-character:
          child: []
          count: 0
          description: ラビットハウスの一人娘。クールな性格だがココアのことは嫌いじゃない…!? コーヒーに詳しいしっかり者。
          issuer:
            accountID: 1
            name: お窓
          lcount: 0
          name: 香風智乃
          nsfw: false
          parent: []
          tagID: 2
          type: character
        example-copyright:
          child: []
          count: 0
          description: こころぴょんぴょんする漫画 from 芳文社
          issuer:
            accountID: 1
            name: お窓
          lcount: 0
          name: ご注文はうさぎですか?
          nsfw: false
          parent: []
          tagID: 1
          type: copyright
        example-general:
          child: []
          count: 0
          description: 小さな女の子
          issuer:
            accountID: 1
            name: お窓
          lcount: 0
          name: ロリ
          nsfw: false
          parent: []
          tagID: 3
          type: general
        example-meta:
          child: []
          count: 0
          description: フルHD並の解像度がある画像
          issuer:
            accountID: 1
            name: お窓
          lcount: 0
          name: FHD
          nsfw: false
          parent: []
          tagID: 4
          type: meta
  securitySchemes:
    Authorization:
      scheme: bearer
      type: http
info:
  contact:
    email: dsgamer777@gmail.com
    name: Omado
    url: https://twitter.com/shallow_omado
  description: Arts related api (required)
  license:
    name: AGPLv3
    url: https://www.gnu.org/licenses/agpl-3.0.ja.html
  title: UsagiBooru Arts API
  version: '2.0'
openapi: 3.0.0
paths:
  /arts:
    post:
      description: パラメータで与えられたイラストを投稿します
      operationId: addArt
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ArtStruct'
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ArtStruct'
          description: Created
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GeneralMessageResponse'
          description: Bad Request
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GeneralMessageResponse'
          description: Forbidden
      summary: Create art
      tags:
      - arts
  /arts/{artID}:
    delete:
      deprecated: true
      description: '指定したイラストを削除します

        削除してほしくないため非推奨とします

        (このエンドポイントから削除したイラストは

        参照が不可能になるだけであり一定日数サーバー上に残されます)'
      operationId: delete-arts-artID
      responses:
        '204':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GeneralMessageResponse'
          description: No Content
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GeneralMessageResponse'
          description: Forbidden
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GeneralMessageResponse'
          description: Not Found
      summary: Delete art
      tags:
      - arts
    get:
      description: 指定したイラストを取得します
      operationId: getArt
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ArtStruct'
          description: OK
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GeneralMessageResponse'
          description: Not Found
        '451':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GeneralMessageResponse'
          description: Unavailable For Legal Reasons
      summary: Get art info
      tags:
      - arts
    parameters:
    - description: 取得したいイラストのID
      in: path
      name: artID
      required: true
      schema:
        type: integer
    patch:
      description: '指定したイラストの情報を編集します

        パラメータで与えられたデータに応じて柔軟に

        絵師名・タグ・キャラクター等を同時に書き換えます'
      operationId: put-arts-artID
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ArtStruct'
        description: ''
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ArtStruct'
          description: OK
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GeneralMessageResponse'
          description: Bad Request
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GeneralMessageResponse'
          description: Forbidden
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GeneralMessageResponse'
          description: Not Found
      summary: Edit art
      tags:
      - arts
  /arts/{artID}/comments:
    get:
      description: 指定したイラストに付いているコメントのみを一覧で取得します
      operationId: getArtComments
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetArtCommentsResponse'
          description: OK
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GeneralMessageResponse'
          description: Not Found
      summary: Get art comments
      tags:
      - arts
    parameters:
    - description: 対象のイラストID
      in: path
      name: artID
      required: true
      schema:
        type: integer
    post:
      description: 指定したイラストにコメントを追加します
      operationId: addArtComment
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CommentEditStruct'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CommentStruct'
          description: OK
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GeneralMessageResponse'
          description: Forbidden
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GeneralMessageResponse'
          description: Not Found
        '429':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GeneralMessageResponse'
          description: Too Many Requests
      summary: Add art comment
      tags:
      - arts
  /arts/{artID}/comments/{commentID}:
    delete:
      description: 指定したイラストに付けたコメントを削除します
      operationId: deleteArtComment
      responses:
        '204':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GeneralMessageResponse'
          description: No Content
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GeneralMessageResponse'
          description: Forbidden
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GeneralMessageResponse'
          description: Not Found
      summary: Delete art comment
      tags:
      - arts
    get:
      description: 指定したイラストに付いている、指定されたIDのコメントを取得します
      operationId: getArtComment
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CommentStruct'
          description: OK
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GeneralMessageResponse'
          description: Not Found
      summary: Get art comment
      tags:
      - arts
    parameters:
    - description: 対象のイラストID
      in: path
      name: artID
      required: true
      schema:
        type: integer
    - description: 編集したいコメントのID
      in: path
      name: commentID
      required: true
      schema:
        type: integer
    patch:
      description: '指定したイラストに付けたコメントを編集します

        (ActivityPubを使用している場合、編集後の内容が再投稿されます)'
      operationId: editArtComment
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CommentEditStruct'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CommentStruct'
          description: OK
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GeneralMessageResponse'
          description: Bad Request
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GeneralMessageResponse'
          description: Forbidden
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GeneralMessageResponse'
          description: Not Found
      summary: Edit art comment
      tags:
      - arts
  /arts/{artID}/likes:
    get:
      description: 指定したイラストのいいねを取得します
      operationId: getArtLikes
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ArtDetailedLikesStruct'
          description: OK
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GeneralMessageResponse'
          description: Not Found
      summary: Get art likes
      tags:
      - arts
    parameters:
    - description: いいねしたいイラストのID
      in: path
      name: artID
      required: true
      schema:
        type: integer
  /arts/{artID}/likes/{likeType}:
    get:
      description: 指定したイラストのいいねを取得します
      operationId: getArtLikesWithType
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetArtLikesResponse'
          description: OK
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GeneralMessageResponse'
          description: Not Found
      summary: Get art likes with specify type
      tags:
      - arts
    parameters:
    - description: いいねしたいイラストのID
      in: path
      name: artID
      required: true
      schema:
        type: integer
    - description: いいね種別
      in: path
      name: likeType
      required: true
      schema:
        default: yellow
        enum:
        - yellow
        - green
        - red
        - blue
        example: yellow
        type: string
    patch:
      description: '指定したイラストのいいね数を1増加させます

        いいねする都度、likeTypeに指定されたスターを消費します

        (ToyMoneyApiに問い合わせを行った上で増加処理を行うため若干時間がかかります)'
      operationId: addArtLike
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetArtLikesResponse'
          description: OK
        '402':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GeneralMessageResponse'
          description: Payment Required
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GeneralMessageResponse'
          description: Not Found
        '429':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GeneralMessageResponse'
          description: Too Many Requests
      summary: Plus art like (with using star)
      tags:
      - arts
  /arts/{artID}/replace:
    parameters:
    - description: 置き換えしたい(画質が低い方の)イラストID
      in: path
      name: artID
      required: true
      schema:
        type: integer
    patch:
      description: 'パスパラメータで指定された低画質なイラストに対して

        クエリパラメータで指定されたより画質の良いイラストで統合(置き換え)処理を行います。

        画質が低い方のいいね・タグ・出典・コメントが画質が高い方のイラストに対して統合されます。

        置き換えられた画質が低い方のイラストは検索結果に表示されなくなりますが、IDを直接指定すれば閲覧できる状態で残ります。'
      operationId: replaceArt
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PostReplaceArtRequest'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ArtStruct'
          description: OK
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GeneralMessageResponse'
          description: Bad Request
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GeneralMessageResponse'
          description: Forbidden
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GeneralMessageResponse'
          description: Not Found
        '409':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GeneralMessageResponse'
          description: Conflict
      summary: Combine art info
      tags:
      - arts
  /arts/{artID}/replace_simulate:
    parameters:
    - description: 置き換えしたい(画質が低い方の)イラストID
      in: path
      name: artID
      required: true
      schema:
        type: integer
    patch:
      description: 'パスパラメータで指定された低画質なイラストに対して

        クエリパラメータで指定されたより画質の良いイラストで統合(置き換え)処理の検証を行います。

        画質が低い方のいいね・タグ・出典・コメントが画質が高い方のイラストに対して統合されます。

        置き換えられた画質が低い方のイラストは検索結果に表示されなくなりますが、IDを直接指定すれば閲覧できる状態で残ります。'
      operationId: replaceArtSimulate
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PostReplaceArtRequest'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PostReplaceArtSimulateResponse'
          description: OK
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GeneralMessageResponse'
          description: Bad Request
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GeneralMessageResponse'
          description: Not Found
        '409':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GeneralMessageResponse'
          description: Conflict
      summary: Combine art info(simulate)
      tags:
      - arts
  /arts/{artID}/tags:
    get:
      description: 指定したイラストに付いているタグのみを一覧で取得します
      operationId: getArtTags
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetArtTagsResponse'
          description: OK
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GeneralMessageResponse'
          description: Not Found
      summary: Get art tags
      tags:
      - arts
    parameters:
    - description: 対象のイラストID
      in: path
      name: artID
      required: true
      schema:
        type: integer
    patch:
      description: '指定したイラストのタグ一覧に、与えられたIDのタグを設定します

        削除も同様にこのエンドポイントを用います

        (イラスト本体の編集時に付けられたタグ名から

        自動的にタグIDを引き出し追加/削除を行う処理が追加されたため

        こちらのエンドポイントを使用する必要はありません)'
      operationId: editArtTags
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PutArtTagsRequest'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetArtTagsResponse'
          description: OK
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GeneralMessageResponse'
          description: Bad Request
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GeneralMessageResponse'
          description: Forbidden
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GeneralMessageResponse'
          description: Not Found
      summary: Edit art tags
      tags:
      - arts
  /arts/{artID}/views:
    get:
      description: 指定したイラストの閲覧回数のみを取得します
      operationId: getArtViews
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetArtViewsResponse'
          description: OK
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GeneralMessageResponse'
          description: Not Found
      summary: Get art views
      tags:
      - arts
    parameters:
    - description: 対象のイラストID
      in: path
      name: artID
      required: true
      schema:
        type: integer
    patch:
      description: '指定したイラストの閲覧回数を1増加させます

        同一アカウントからのイラスト閲覧は1日1回のみカウントされます'
      operationId: addArtView
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetArtViewsResponse'
          description: OK
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GeneralMessageResponse'
          description: Not Found
        '429':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GeneralMessageResponse'
          description: Too Many Requests
      summary: Plus art view
      tags:
      - arts
  /report/arts/{artID}:
    parameters:
    - description: 対象のイラストID
      in: path
      name: artID
      required: true
      schema:
        type: integer
    post:
      description: '指定したイラストを運営に通報します

        むやみに利用するとアカウントが停止される可能性があります'
      operationId: reportArt
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PostReportGeneralRequest'
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GeneralMessageResponse'
          description: Created
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GeneralMessageResponse'
          description: Bad Request
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GeneralMessageResponse'
          description: Forbidden
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GeneralMessageResponse'
          description: Not Found
      summary: Report art
      tags:
      - report
security:
- Authorization: []
servers:
- description: Prod
  url: https://api.gochiusa.team
- description: Staging
  url: https://api-next.gochiusa.team
- description: Dev
  url: http://127.0.0.1:8080
tags:
- name: report
- name: arts
