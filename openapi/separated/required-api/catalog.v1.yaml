components:
  parameters:
    SearchQueryMylistAllow:
      description: マイリスト追加済みかを取得する0/1 (デフォルト1)
      in: query
      name: with_mylisted
      required: false
      schema:
        default: 1
        enum:
        - 1
        - 0
        example: 1
        format: int32
        maximum: 1
        minimum: 0
        type: integer
    SearchQueryMylistDeny:
      description: マイリスト追加済みかを取得する0/1 (デフォルト0)
      in: query
      name: with_mylisted
      schema:
        default: 0
        enum:
        - 0
        - 1
        example: 0
        maximum: 1
        minimum: 0
        type: integer
    SearchQueryOrder:
      description: ソート方向 d:降順(大→小) a:昇順(小→大)
      in: query
      name: order
      required: false
      schema:
        default: d
        enum:
        - d
        - a
        example: d
        maxLength: 1
        minLength: 1
        type: string
    SearchQueryPage:
      description: 'ページ番号 (NOTE: 1ページ辺りの応答は20件)'
      in: query
      name: page
      required: false
      schema:
        minimum: 1
        type: integer
    SearchQueryPerPage:
      description: 1ページ辺りの要素数
      in: query
      name: per_page
      required: false
      schema:
        default: 20
        enum:
        - 20
        - 40
        - 60
        - 80
        - 100
        example: 20
        maximum: 100
        minimum: 20
        type: integer
    SearchQuerySort:
      description: ソート方法 l:いいね数順 d:投稿日順
      in: query
      name: sort
      required: false
      schema:
        default: d
        enum:
        - l
        - d
        example: d
        type: string
    SearchQuerySortCatalog:
      description: ソート方法 c:ヒット数 d:最終更新 l:いいね数 n:名前
      in: query
      name: sort
      schema:
        default: d
        enum:
        - c
        - d
        - l
        - n
        example: d
        type: string
  schemas:
    ArtistStruct:
      description: イラストの絵師情報構造体
      properties:
        artistID:
          description: 絵師のID
          example: 1
          type: integer
        contributors:
          description: 絵師情報を登録したユーザーのID
          items:
            $ref: '#/components/schemas/LightAccountStruct'
          type: array
        count:
          default: 0
          description: 絵師に属する作品数
          example: 1
          minimum: 0
          type: integer
        description:
          description: 絵師を説明する文章(1行分)
          example: ごちうさなどのきらら系中心に、オリジナルなどのサークルやってます
          type: string
        group:
          description: サークル名
          example:
          - こねこぼたん
          items:
            example: こねこぼたん
            type: string
          type: array
        homepage:
          description: HPのURL
          items:
            example: http://konebota.x0.com/PAGE/
            format: uri-reference
            type: string
          type: array
        lcount:
          default: 0
          description: 絵師に属するいいね数
          example: 1204
          minimum: 0
          type: integer
        mastodon:
          description: マストドンアカウントのURL
          items:
            example: https://pawoo.net/@saiden
            format: uri-reference
            type: string
          type: array
        name:
          description: 絵師の名前(ペンネーム正式名)
          example:
          - 彩電
          items:
            example: 彩電
            type: string
          type: array
        pixivID:
          description: PixivのユーザーID(数字)
          items:
            example: 40436
            type: integer
          type: array
        twitterID:
          description: Twitterの表示ID(英数字+)
          items:
            example: harufcs
            type: string
          type: array
      title: ArtistStruct
      type: object
      x-examples:
        example:
          artistID: 1
          contributors:
          - accountID: 1
            name: お窓
          count: 1
          description: ごちうさなどのきらら系中心に、オリジナルなどのサークルやってます
          group:
          - こねこぼたん
          homepage:
          - http://konebota.x0.com/PAGE/
          lcount: 1204
          mastodon:
          - https://pawoo.net/@saiden
          name:
          - 彩電
          pixivID:
          - 40436
          twitterID:
          - harufcs
    GetCatalogArtistResponse:
      description: 絵師一覧の応答構造体
      properties:
        contents:
          items:
            $ref: '#/components/schemas/ArtistStruct'
          minItems: 1
          type: array
          uniqueItems: true
        pagination:
          $ref: '#/components/schemas/PaginationStruct'
      required:
      - pagination
      - contents
      title: GetCatalogArtistResponse
      type: object
      x-examples:
        example:
          contents:
          - artistID: 1
            contributors:
            - accountID: 1
              name: お窓
            count: 1
            description: ごちうさなどのきらら系中心に、オリジナルなどのサークルやってます
            group:
            - こねこぼたん
            homepage:
            - http://konebota.x0.com/PAGE/
            lcount: 1204
            mastodon:
            - https://pawoo.net/@saiden
            name:
            - 彩電
            pixivID:
            - 40436
            twitterID:
            - harufcs
          pagination:
            count: 1
            current: 1
            pages: 1
            perPage: 20
            title: 絵師一覧
            type: artist
    GetCatalogTagResponse:
      description: タグ一覧の応答構造体
      properties:
        contents:
          items:
            $ref: '#/components/schemas/TagStruct'
          minItems: 1
          type: array
          uniqueItems: true
        pagination:
          $ref: '#/components/schemas/PaginationStruct'
      required:
      - pagination
      - contents
      title: GetCatalogTagResponse
      type: object
      x-examples:
        example:
          contents:
          - child: []
            count: 0
            description: こころぴょんぴょんする漫画 from 芳文社
            issuer:
              accountID: 1
              name: お窓
            lcount: 0
            name: ご注文はうさぎですか?
            nsfw: false
            parent: []
            tagID: 1
            type: copyright
          - child: []
            count: 0
            description: ラビットハウスの一人娘。クールな性格だがココアのことは嫌いじゃない…!? コーヒーに詳しいしっかり者。
            issuer:
              accountID: 1
              name: お窓
            lcount: 0
            name: 香風智乃
            nsfw: false
            parent: []
            tagID: 2
            type: character
          - child: []
            count: 0
            description: 小さな女の子
            issuer:
              accountID: 1
              name: お窓
            lcount: 0
            name: ロリ
            nsfw: false
            parent: []
            tagID: 3
            type: general
          - child: []
            count: 0
            description: フルHD並の解像度がある画像
            issuer:
              accountID: 1
              name: お窓
            lcount: 0
            name: FHD
            nsfw: false
            parent: []
            tagID: 4
            type: meta
          pagination:
            count: 4
            current: 1
            pages: 1
            perPage: 20
            title: タグ一覧
            type: tag
    GetCatalogUploaderResponse:
      description: 投稿者一覧の応答構造体
      properties:
        contents:
          items:
            $ref: '#/components/schemas/UploaderStruct'
          minItems: 1
          type: array
          uniqueItems: true
        pagination:
          $ref: '#/components/schemas/PaginationStruct'
      required:
      - pagination
      - contents
      title: GetCatalogUploaderResponse
      type: object
      x-examples:
        example:
          contents:
          - accountID: 1
            count: 0
            lcount: 0
            name: お窓
          - accountID: 2
            count: 0
            lcount: 0
            name: 香風智乃
          pagination:
            count: 2
            current: 1
            pages: 1
            perPage: 20
            title: 投稿者一覧
            type: uploader
    LightAccountStruct:
      description: アカウント情報の簡易構造体(読み取り専用)
      properties:
        accountID:
          description: アカウントID
          example: 1
          minimum: 1
          type: integer
        name:
          description: アカウント名
          example: お窓
          type: string
      title: LightAccountStruct
      type: object
      x-examples:
        example:
          accountID: 1
          name: お窓
    LightTagStruct:
      description: タグ情報の簡易構造体(読み取り専用)
      properties:
        name:
          description: タグの名称
          example: 香風智乃
          maxLength: 20
          minLength: 1
          type: string
        tagID:
          description: サイト内通しタグ番号
          example: 2
          minimum: 1
          type: integer
      title: LightTagStruct
      type: object
      x-examples:
        example-character:
          name: 香風智乃
          tagID: 2
          type: character
        example-copyright:
          name: ご注文はうさぎですか?
          tagID: 1
          type: copyright
        example-general:
          name: ロリ
          tagID: 3
          type: general
        example-meta:
          name: FHD
          tagID: 4
          type: meta
    PaginationStruct:
      description: ページネーション情報の構造体
      properties:
        count:
          default: 0
          description: ヒット総数
          example: 1
          minimum: 0
          type: integer
        current:
          default: 1
          description: 現在のページ
          example: 1
          minimum: 1
          type: integer
        pages:
          default: 1
          description: ページ数
          example: 1
          minimum: 1
          type: integer
        perPage:
          default: 20
          description: ページ毎の取得数
          enum:
          - 20
          - 40
          - 60
          - 80
          - 100
          example: 20
          format: int32
          maximum: 100
          minimum: 20
          type: integer
        title:
          description: ページネーションタイトル(表示用)
          example: 香風智乃
          minLength: 1
          type: string
        type:
          default: tag
          description: ページネーション種別(表示用)
          enum:
          - artist
          - tag
          - uploader
          - notify-client
          - notify-condition
          - mute
          - follow
          - article
          - mylist-list
          - art
          - upload-history
          example: tag
          type: string
      required:
      - title
      - type
      - count
      - current
      - pages
      - perPage
      title: PaginationStruct
      type: object
      x-examples:
        example:
          count: 1
          current: 1
          pages: 1
          perPage: 20
          title: 香風智乃
          type: tag
    TagStruct:
      description: タグ情報の構造体
      properties:
        child:
          description: 子となるタグ
          items:
            $ref: '#/components/schemas/LightTagStruct'
          minItems: 0
          type: array
        count:
          default: 0
          description: タグに属する作品数
          example: 0
          minimum: 0
          type: integer
        description:
          description: タグの説明文
          maxLength: 280
          minLength: 0
          type: string
        issuer:
          $ref: '#/components/schemas/LightAccountStruct'
        lcount:
          default: 0
          description: タグに属するいいね数
          example: 0
          minimum: 0
          type: integer
        name:
          description: タグの名称
          maxLength: 20
          minLength: 1
          type: string
        nsfw:
          default: false
          description: アダルトコンテンツが含まれるタグか
          type: boolean
        parent:
          description: 親となるタグ
          items:
            $ref: '#/components/schemas/LightTagStruct'
          minItems: 0
          type: array
        tagID:
          description: サイト内通しタグ番号
          minimum: 1
          type: integer
        type:
          default: general
          description: タグ種別
          enum:
          - copyright
          - character
          - general
          - meta
          example: general
          type: string
      title: TagStruct
      type: object
      x-examples:
        example-character:
          child: []
          count: 0
          description: ラビットハウスの一人娘。クールな性格だがココアのことは嫌いじゃない…!? コーヒーに詳しいしっかり者。
          issuer:
            accountID: 1
            name: お窓
          lcount: 0
          name: 香風智乃
          nsfw: false
          parent: []
          tagID: 2
          type: character
        example-copyright:
          child: []
          count: 0
          description: こころぴょんぴょんする漫画 from 芳文社
          issuer:
            accountID: 1
            name: お窓
          lcount: 0
          name: ご注文はうさぎですか?
          nsfw: false
          parent: []
          tagID: 1
          type: copyright
        example-general:
          child: []
          count: 0
          description: 小さな女の子
          issuer:
            accountID: 1
            name: お窓
          lcount: 0
          name: ロリ
          nsfw: false
          parent: []
          tagID: 3
          type: general
        example-meta:
          child: []
          count: 0
          description: フルHD並の解像度がある画像
          issuer:
            accountID: 1
            name: お窓
          lcount: 0
          name: FHD
          nsfw: false
          parent: []
          tagID: 4
          type: meta
    UploaderStruct:
      description: 投稿者情報の応答構造体
      properties:
        accountID:
          description: ユーザーID
          example: 1
          minimum: 1
          type: integer
        count:
          description: 投稿数
          example: 1
          minimum: 0
          type: integer
        lcount:
          description: 得たいいね数
          example: 1
          minimum: 0
          type: integer
        name:
          description: ユーザー名
          example: お窓
          maxLength: 40
          minLength: 1
          type: string
      required:
      - accountID
      - name
      - count
      - lcount
      title: UploaderStruct
      type: object
      x-examples:
        example:
          accountID: 1
          count: 1
          lcount: 1
          name: お窓
  securitySchemes:
    Authorization:
      scheme: bearer
      type: http
info:
  contact:
    email: dsgamer777@gmail.com
    name: Omado
    url: https://twitter.com/shallow_omado
  description: Catalog related api (required)
  license:
    name: AGPLv3
    url: https://www.gnu.org/licenses/agpl-3.0.ja.html
  title: UsagiBooru Catalog API
  version: '2.0'
openapi: 3.0.0
paths:
  /catalog/artists:
    get:
      description: 絵師一覧を取得します
      operationId: getArtistList
      parameters:
      - $ref: '#/components/parameters/SearchQueryPage'
      - $ref: '#/components/parameters/SearchQuerySortCatalog'
      - $ref: '#/components/parameters/SearchQueryOrder'
      - $ref: '#/components/parameters/SearchQueryPerPage'
      responses:
        '200':
          content:
            application/json:
              examples: {}
              schema:
                $ref: '#/components/schemas/GetCatalogArtistResponse'
          description: ヒットしたデータが応答のdata->contentsに配列で返却されます
      summary: Get artist list
      tags:
      - catalog
    parameters: []
  /catalog/characters:
    get:
      description: キャラクター一覧を取得します
      operationId: getCharacterList
      parameters:
      - $ref: '#/components/parameters/SearchQueryPage'
      - $ref: '#/components/parameters/SearchQuerySortCatalog'
      - $ref: '#/components/parameters/SearchQueryOrder'
      - $ref: '#/components/parameters/SearchQueryPerPage'
      responses:
        '200':
          content:
            application/json:
              examples: {}
              schema:
                $ref: '#/components/schemas/GetCatalogTagResponse'
          description: ヒットしたデータが応答のdata->contentsに配列で返却されます
      summary: Get character list
      tags:
      - catalog
  /catalog/tags:
    get:
      description: タグ一覧を取得します
      operationId: getTagList
      parameters:
      - $ref: '#/components/parameters/SearchQueryPage'
      - $ref: '#/components/parameters/SearchQuerySortCatalog'
      - $ref: '#/components/parameters/SearchQueryOrder'
      - $ref: '#/components/parameters/SearchQueryPerPage'
      responses:
        '200':
          content:
            application/json:
              examples: {}
              schema:
                $ref: '#/components/schemas/GetCatalogTagResponse'
          description: ヒットしたデータが応答のdata->contentsに配列で返却されます
      summary: Get tag list
      tags:
      - catalog
    parameters: []
  /catalog/uploaders:
    get:
      description: 投稿者一覧を取得します
      operationId: getUploaderList
      parameters:
      - $ref: '#/components/parameters/SearchQueryPage'
      - $ref: '#/components/parameters/SearchQuerySort'
      - $ref: '#/components/parameters/SearchQueryOrder'
      - $ref: '#/components/parameters/SearchQueryPerPage'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetCatalogUploaderResponse'
          description: OK
      summary: Get uploader list
      tags:
      - catalog
security:
- Authorization: []
servers:
- description: Prod
  url: https://api.gochiusa.team
- description: Staging
  url: https://api-next.gochiusa.team
- description: Dev
  url: http://127.0.0.1:8080
tags:
- name: catalog
